#!/bin/bash
# File:  	create_tiva_firmware_download_file
# Purpose:	Creates firmware image file 'image'
#		by prepending the actual .bin contents
#		with information about the release.
# Inputs:	arg1 = a4m/a4b/a4i
#		arg2 = board's new IP address or "default"
#		arg3 = VLAN identifier (usually should be '0')
#		arg4 = firmware version
#		arg5 = firmware build date (like mm/dd/yyyy)
#		arg6 = fully qualified .bin file name
#		arg7 = board's current IP address


# ----------------------------------------------------------------------------
# First process the inputs from the command line, and set environment variables

# Determine the board's numeric role, namely:
#   a4m = 1
#   a4b = 2
#   a4i1 = 3
#   a4i2 = 4
ROLE="unknown"
if [ $1 = "a4m" ]; then
	ROLE=1
fi
if [ $1 = "a4b" ]; then
	ROLE=2
fi
if [ $1 = "a4i1" ]; then
	ROLE=3
fi
if [ $1 = "a4i2" ]; then
	ROLE=4
fi
if [ $ROLE = "unknown" ]; then
	echo "ERROR, bad arg $1"
	exit
fi

# Set IP address variable.
if [ $2 <> "default" ]; then
	IP=`echo $2|awk '{printf("%02X%02X%02X%02X",substr($1,1,2),substr($1,4,1),substr($1,6,1),substr($1,8,1))}'`
else
	if [ $ROLE = 1 ]; then
		IP="10.0.0.1"
	fi
	if [ $ROLE = 2 ]; then
		IP="10.0.0.2"
	fi
	if [ $ROLE = 3 ]; then
		IP="10.0.0.3"
	fi
	if [ $ROLE = 4 ]; then
		IP="10.0.0.4"
	fi
fi

# Find the Tiva firmware's checksum and length.

FCKSUM=`cksum $6|awk '{printf("%s",$1)}'`
FCKSUM=`printf "%08X" $FCKSUM`
FLEN=`cksum $6|awk '{printf("%s",$2)}'`

# Get the file creation date into form expected by Tiva.
# bits 31:24 = month
# bits 23:16 = day
# bits 15:0 = year

FMON=`echo $5|awk '{printf("%s",substr($1,1,2))}'`
FDAY=`echo $5|awk '{printf("%s",substr($1,4,2))}'`
FYEAR=`echo $5|awk '{printf("%s",substr($1,7,4))}'`
FDATE=`printf "%02X%02X%04X" $FMON $FDAY $FYEAR`


# ----------------------------------------------------------------------------
# Create a log entry showing the values we are prepending to the firmware file

logger $0": IP="$IP",ROLE="$ROLE",VERSION="$4",CHECKSUM="$FCKSUM",LEN="$FLEN",DATE="$FMON$FDAY$FYEAR

# ----------------------------------------------------------------------------
# Now create the 'image' file.

# Board's IP address is first value written to image.
echo "IP: "$IP
echo $IP | xxd -r -p > image

# AccuLoad VLAN identifier (perhaps not needed)
echo "VLAN: "$3
printf "%.8x" $3 | awk '{printf("%s",substr($1,7,2));printf("%s",substr($1,5,2));printf("%s",substr($1,3,2));printf("%s",substr($1,1,2))}' | xxd -r -p >> image

# Board's role (a4m=1, a4b=2, a4i=3)
echo "ROLE: "$ROLE
printf "%.8x" $ROLE | awk '{printf("%s",substr($1,7,2));printf("%s",substr($1,5,2));printf("%s",substr($1,3,2));printf("%s",substr($1,1,2))}' | xxd -r -p >> image

# Firmware version
# Major: upper 16 bits, minor: lower 16 bits
echo "VERSION: "$4
printf "%.8x" $4 | awk '{printf("%s",substr($1,7,2));printf("%s",substr($1,5,2));printf("%s",substr($1,3,2));printf("%s",substr($1,1,2))}' | xxd -r -p >> image

# Firmware CRC
echo "CRC: "$FCKSUM
echo $FCKSUM | awk '{printf("%s",substr($1,7,2));printf("%s",substr($1,5,2));printf("%s",substr($1,3,2));printf("%s",substr($1,1,2))}' | xxd -r -p >> image



echo "DEBUG--checksum"
echo $FCKSUM | awk '{printf("%s",substr($1,7,2));printf("%s",substr($1,5,2));printf("%s",substr($1,3,2));printf("%s",substr($1,1,2))}'




# Firmware creation date
echo "DATE: "$FDATE
echo $FDATE | awk '{printf("%s",substr($1,7,2));printf("%s",substr($1,5,2));printf("%s",substr($1,3,2));printf("%s",substr($1,1,2))}' | xxd -r -p >> image

# Firmware length (number of bytes)
echo "LENGTH: "$FLEN
printf "%.8x" $FLEN | awk '{printf("%s",substr($1,7,2));printf("%s",substr($1,5,2));printf("%s",substr($1,3,2));printf("%s",substr($1,1,2))}' | xxd -r -p >> image

# Firmware starting address (perhaps not needed)
echo "ADDR: 0x200000"
printf "%.8x" 0x20000 | awk '{printf("%s",substr($1,7,2));printf("%s",substr($1,5,2));printf("%s",substr($1,3,2));printf("%s",substr($1,1,2))}' | xxd -r -p >> image

# ----------------------------------------------------------------------------
# Copy the IOP firmware image to the end of the 'image' file.

cat $6 >> image

# ----------------------------------------------------------------------------
# Log entry:  Starting download to Tiva board

logger $0": Starting download of image file to IP address "$7

# cat the file to socat, which will make a connection to the target Tiva
# board and will send all bytes in the 'image' file to it.

cat image|socat -d -d - tcp:$7:3210

# ----------------------------------------------------------------------------
# Log entry:  All done

logger $0": done downloading to IP address "$7

